{"version":3,"sources":["components/Filter.js","components/Phonebook.js","components/PersonForm.js","components/Notification.js","services/phoneService.js","App.js","index.js"],"names":["Filter","value","onChange","Phonebook","persons","deletePerson","map","person","name","number","onClick","id","PersonForm","addName","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","successStyle","color","background","fontSize","border","padding","margin","errorStyle","border_radius","Notification","message","includes","style","baseUrl","axios","get","nameObject","post","delete","then","response","data","put","App","useState","setPersons","setNewName","setNewNumber","filterName","setFilterName","setMessage","useEffect","phoneService","filteredPersons","filter","toLowerCase","indexOf","event","target","preventDefault","filterMatch","updatePerson","window","confirm","personId","console","log","updatedPerson","setTimeout","catch","error","concat","delPerson","personName","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27ab6fcd.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({value, onChange}) => \n   \n      <div>\n        filter shown with <input value={value} onChange={onChange} />\n      </div>\n\nexport default Filter","import React from 'react'\n\nconst Phonebook = ({persons, deletePerson}) => {\n    return(\n      <div>\n        {persons.map(person => <p key={person.id}>{person.name} {person.number} <button onClick={() => deletePerson(person.id)}>delete</button></p>)}\n      </div>\n    ) \n  }\n\n  export default Phonebook","import React from 'react'\n\nconst PersonForm = ({addName, newName, handleNameChange, newNumber, handleNumberChange}) => {\n    return(\n        <form onSubmit={addName}>\n        <div>\n          name: <input \n                  value={newName}\n                  onChange={handleNameChange}\n                  />\n        </div>\n        <div>\n          number: <input\n                  value={newNumber}\n                  onChange={handleNumberChange} \n                  />\n          </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst successStyle = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    border: '.02em solid green',\n    padding: 10,\n    margin: '10px 0px'\n  }\n  \n  const errorStyle = {\n    color: 'red',\n    background: 'lightgrey',\n    fontSize: 20,\n    border: '.02em solid red',\n    border_radius: 5,\n    padding: 10,\n    margin: '10px 0px'\n  }\n\nconst Notification = ({message}) => {\n    if (message === null) {\n        return null\n    }\n\n    if (message.includes('Error')) {\n        return (\n            <div style={errorStyle}>\n                {message}\n            </div>\n        )\n    }\n\n    else {\n        return (\n            <div style={successStyle}>{message}</div>\n        )\n    }\n}\n\nexport default Notification","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = nameObject => {\n    return axios.post(baseUrl, nameObject)\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n  }\n\n  const update = ( id, nameObject ) => {\n    const request = axios.put(`${baseUrl}/${id}`, nameObject);\n    return request.then((response) => response.data);\n  }\n\nexport default  { getAll, create, remove, update }\n   \n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Phonebook from './components/Phonebook'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport phoneService from './services/phoneService'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterName, setFilterName] = useState('')\n  const [message, setMessage] = useState(null)\n\n  useEffect(() => {\n    phoneService\n    .getAll()\n    .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  const addName = (event) => {\n    event.preventDefault()\n    const filterMatch = persons.map(value => value.name.toLowerCase())\n    const updatePerson = persons.filter(person => person.name.toLowerCase() === newName.toLowerCase())\n    const nameObject = {\n      name: newName,\n      number: newNumber  \n    } \n    \n    if (filterMatch.includes(nameObject.name)) {\n      if (window.confirm(`${nameObject.name} is already added to phonebook, replace the old number with a new one?`)) {\n        \n        const personId = updatePerson[0].id\n        console.log(personId)\n        phoneService\n          .update(personId, nameObject)\n          .then((updatedPerson) => {\n            setPersons(\n              persons.map((person) => \n              person.id === personId ? updatedPerson : person\n              )\n            )\n            setNewName('')\n            setNewNumber('')\n            setMessage(`${newName} was updated`)\n            setTimeout(() => {\n            setMessage(null)\n              }, 5000)\n          })\n          .catch((error) => {\n            console.log(error)\n            setMessage(\n              `Error ${updatePerson[0].name} was already deleted from server`\n            )\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n      }\n    } else {\n    phoneService\n        .create(nameObject)\n        .then(response => {\n          console.log(response.data)\n      setPersons(persons.concat(response.data))\n      setNewName('')\n      setNewNumber('')\n      setMessage(`${newName} was added`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    })\n    .catch(error => {\n      setMessage(\n        `ERROR ${error.response.data.error}`\n      )\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)  \n      console.log(error.response.data)\n    })\n    }\n  }\n\n  const deletePerson = (id) => {\n    const delPerson = persons.filter( person => person.id === id )\n    const personId = delPerson[0].id\n    const personName = delPerson[0].name\n    if (window.confirm(`Delete ${personName}?`)) {\n          phoneService\n              .remove(personId) \n              setMessage(`${personName} was deleted`)\n              setTimeout(() => {\n              setMessage(null)\n                }, 5000)         \n    }\n    setPersons(persons.filter(person => person.id !== personId))\n\n  }\n\n  const handleFilter = (event) => {\n    setFilterName(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  \n\n  let filteredPersons = persons\n\n  if (filterName) {\n    filteredPersons = persons.filter(\n      person => person.name.toLowerCase().indexOf(filterName.toLowerCase()) !== -1\n    )\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <Filter value={filterName} onChange={handleFilter} />\n        <h2>add new</h2>\n        <PersonForm addName={addName} \n                    newName={newName} \n                    handleNameChange={handleNameChange} \n                    newNumber={newNumber} \n                    handleNumberChange={handleNumberChange} \n        />\n        <Notification message={message} />\n      <h2>Numbers</h2>\n        <Phonebook persons={filteredPersons} deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}